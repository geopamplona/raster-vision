syntax = "proto2";

package rv.protos;

import "google/protobuf/struct.proto";
import "rastervision/protos/raster_transformer.proto";
import "rastervision/protos/vector_source.proto";

message RasterSourceConfig {
    message GeoTiffFiles {
        repeated string uris = 1;
    }

    message ImageFile {
        required string uri = 1;
    }

    // Used to read a VectorSource as a raster useful for semantic segmentation.
    message RasterizedSource {
        message RasterizerOptions {
            // The class_id to use for background pixels that don't overlap with any
            // shapes in the GeoJSON file.
            required int32 background_class_id = 2;

            // Number of pixels to add to each side of line when rasterized.
            optional int32 line_buffer = 3 [default=15];
        }
        required VectorSourceConfig vector_source = 1;
        required RasterizerOptions rasterizer_options = 2;
    }

    required string source_type = 1;
    repeated RasterTransformerConfig transformers = 2;
    // The channel indices and order to use when extracting chips from a
    // RasterSource. For instance, this should be an array of length 3 to
    // generate RGB chips.
    repeated int32 channel_order = 3;

    oneof raster_source_config {
        GeoTiffFiles geotiff_files = 4;
        ImageFile image_file = 5;
        RasterizedSource rasterized_source = 6;
        google.protobuf.Struct custom_config = 7;
    }
}
